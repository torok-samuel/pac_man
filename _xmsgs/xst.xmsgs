<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="413" delta="old" >"C:\pac_man\vga_interface.v" Line 46: Result of <arg fmt="%d" index="1">11</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">10</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"C:\pac_man\vga_interface.v" Line 69: Result of <arg fmt="%d" index="1">11</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">10</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"C:\pac_man\vga_interface.v" Line 85: Result of <arg fmt="%d" index="1">12</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">11</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"C:\pac_man\cpld_interface.v" Line 47: Result of <arg fmt="%d" index="1">17</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">16</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="old" >"C:\pac_man\top_level_vga.v" Line 118: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">dig1_i</arg>&gt;. Formal port size is <arg fmt="%d" index="2">4</arg>-bit while actual signal size is <arg fmt="%d" index="1">1</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"C:\pac_man\top_level_vga.v" Line 119: Assignment to <arg fmt="%s" index="1">sw</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"C:\pac_man\ps2_interface.v" Line 73: Result of <arg fmt="%d" index="1">5</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">4</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"C:\pac_man\game_logic.v" Line 301: Result of <arg fmt="%d" index="1">11</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"C:\pac_man\game_logic.v" Line 301: Assignment to <arg fmt="%s" index="1">pac_poz_o</arg> ignored, since the identifier is never used
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">C:\pac_man\top_level_vga.v</arg>&quot; line <arg fmt="%s" index="2">113</arg>: Output port &lt;<arg fmt="%s" index="3">sw_o</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">cpld_if_i</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="warning" file="Xst" num="2999" delta="new" >Signal &apos;<arg fmt="%s" index="1">pontok</arg>&apos;, unconnected in block &apos;<arg fmt="%s" index="2">vga</arg>&apos;, is tied to its initial value.
</msg>

<msg type="warning" file="Xst" num="2999" delta="new" >Signal &apos;<arg fmt="%s" index="1">UT</arg>&apos;, unconnected in block &apos;<arg fmt="%s" index="2">vga</arg>&apos;, is tied to its initial value.
</msg>

<msg type="warning" file="Xst" num="2999" delta="new" >Signal &apos;<arg fmt="%s" index="1">fal</arg>&apos;, unconnected in block &apos;<arg fmt="%s" index="2">vga</arg>&apos;, is tied to its initial value.
</msg>

<msg type="warning" file="Xst" num="2999" delta="new" >Signal &apos;<arg fmt="%s" index="1">nagypontok</arg>&apos;, unconnected in block &apos;<arg fmt="%s" index="2">vga</arg>&apos;, is tied to its initial value.
</msg>

<msg type="warning" file="Xst" num="2999" delta="new" >Signal &apos;<arg fmt="%s" index="1">felfal</arg>&apos;, unconnected in block &apos;<arg fmt="%s" index="2">vga</arg>&apos;, is tied to its initial value.
</msg>

<msg type="warning" file="Xst" num="2999" delta="new" >Signal &apos;<arg fmt="%s" index="1">pac_man</arg>&apos;, unconnected in block &apos;<arg fmt="%s" index="2">vga</arg>&apos;, is tied to its initial value.
</msg>

<msg type="warning" file="Xst" num="3035" delta="new" >Index value(s) does not match array range for signal &lt;<arg fmt="%s" index="1">mem</arg>&gt;, simulation mismatch.
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">state_led_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">game_log</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;state_led_5&gt; &lt;state_led_6&gt; &lt;state_led_7&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">dreg_13</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpld_if_i</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">dreg_14</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpld_if_i</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">dreg_15</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpld_if_i</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">poz_par_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">game_log</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">state_led_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">game_log</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2404" delta="new" > FFs/Latches &lt;<arg fmt="%s" index="1">state_led</arg>&lt;<arg fmt="%d" index="2">7</arg>:<arg fmt="%d" index="3">4</arg>&gt;&gt; (without init value) have a constant value of <arg fmt="%c" index="4">0</arg> in block &lt;<arg fmt="%s" index="5">game_logic</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="3231" delta="new" >The small RAM &lt;<arg fmt="%s" index="1">Mram_last_direction[1]_PWR_6_o_wide_mux_6_OUT</arg>&gt; will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_mem</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_pontok</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_UT</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_fal</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_nagypontok</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_felfal</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_pac_man</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">dout_reg_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">dout_reg_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">dout_reg_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">dout_reg_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">dout_reg_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">dout_reg_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">dout_reg_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">dout_reg_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">poz_par_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">game_logic</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">dreg_13</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">cpld_if</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">2 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;dreg_14&gt; &lt;dreg_15&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">dreg_13</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cpld_if</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/dout_reg_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/dout_reg_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/dout_reg_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/dout_reg_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/dout_reg_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/dout_reg_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/dout_reg_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/dout_reg_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">cpld_if_i/shr_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_level_vga</arg>&gt;.
</msg>

</messages>

